{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Desktop\\\\CARRERA\\\\CUARTO\\\\SEGUNDO CUATRI\\\\TFG\\\\TFG_RocioGomez\\\\frontend\\\\src\\\\pages\\\\PaginaPrincipal.jsx\",\n  _s = $RefreshSig$();\nimport { useParams, useHistory } from \"react-router-dom\";\nimport NavbarPer from \"../navbar/navbar.js\";\nimport PagGastos from \"../gastos/gastos.js\";\nimport PagIngresos from \"../ingresos/ingresos.js\";\nimport React, { useState, useEffect } from 'react';\nimport './PaginaPrincipal.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URICuentasUser = 'http://localhost:8000/cuentas/user/';\nconst URICuentaDetalle = 'http://localhost:8000/cuentas/';\nfunction PaginaPrincipal() {\n  _s();\n  const {\n    idUser\n  } = useParams();\n  const history = useHistory();\n  const [cuentas, setCuentas] = useState([]); // Estado para almacenar las cuentas\n  const [selectedCuentaId, setSelectedCuentaId] = useState(null); // Estado para almacenar el ID de la cuenta seleccionada\n  const [selectedCuentaNombre, setSelectedCuentaNombre] = useState(''); // Estado para almacenar el nombre de la cuenta seleccionada\n  const [mostrarGastos, setMostrarGastos] = useState(true);\n  useEffect(() => {\n    // Cargar las cuentas al renderizar el componente\n    const fetchCuentas = async () => {\n      try {\n        const response = await axios.get(URICuentasUser + idUser); // Obtener las cuentas del usuario\n        setCuentas(response.data); // Actualizar el estado con las cuentas\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCuentas();\n  }, [idUser]);\n  useEffect(() => {\n    // Obtener el nombre de la cuenta seleccionada\n    const fetchCuentaNombre = async () => {\n      if (selectedCuentaId) {\n        try {\n          const response = await axios.get(URICuentaDetalle + selectedCuentaId);\n          setSelectedCuentaNombre(response.data.nombre); // Actualizar el estado con el nombre de la cuenta\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    };\n    fetchCuentaNombre();\n  }, [selectedCuentaId]);\n  const handleCuentaChange = event => {\n    setSelectedCuentaId(event.target.value); // Actualizar el ID de la cuenta seleccionada\n    setSelectedCuentaNombre(''); // Limpiar el nombre de la cuenta seleccionada\n  };\n  const handleCrearCuenta = () => {\n    history.push(`/${idUser}/cuentas`); // Redirigir a la página de creación de cuenta\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagina-principal\",\n    children: [/*#__PURE__*/_jsxDEV(NavbarPer, {\n      idUser: idUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), cuentas.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sin-cuentas\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A\\xFAn no posee ninguna cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCrearCuenta,\n        children: \"Crear Cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cuenta-select\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCuentaId,\n          onChange: handleCuentaChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), cuentas.map(cuenta => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cuenta.id,\n            children: cuenta.nombre\n          }, cuenta.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedCuentaId ? `Cuenta: ${selectedCuentaNombre}` : 'Seleccione una cuenta'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), selectedCuentaId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botones\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `boton-toggle ${mostrarGastos ? 'activo' : ''}`,\n          onClick: () => setMostrarGastos(true),\n          children: \"Gastos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `boton-toggle ${!mostrarGastos ? 'activo' : ''}`,\n          onClick: () => setMostrarGastos(false),\n          children: \"Ingresos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detalle\",\n        children: selectedCuentaId ? mostrarGastos ? /*#__PURE__*/_jsxDEV(PagGastos, {\n          selectedCuentaId: selectedCuentaId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(PagIngresos, {\n          selectedCuentaId: selectedCuentaId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 102\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n/*\r\nfunction PaginaPrincipal () {\r\n    const {idUser} = useParams()\r\n\r\n    return(\r\n        <div>\r\n            <NavbarPer idUser={idUser}></NavbarPer>\r\n            <div>\r\n            <PagGastos></PagGastos>\r\n             </div>\r\n             <div>\r\n            <PagIngresos></PagIngresos>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst PaginaPrincipal = () => {\r\n  const { idUser } = useParams();\r\n  const [mostrarGastos, setMostrarGastos] = useState(true);\r\n  \r\n  return (\r\n    <div className=\"pagina-principal\">\r\n      <NavbarPer idUser={idUser} />\r\n      <div className=\"contenido\">\r\n        <div className=\"botones\">\r\n          <button className={`boton-toggle ${mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(true)}>Gastos</button>\r\n          <button className={`boton-toggle ${!mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(false)}>Ingresos</button>\r\n        </div>\r\n        <div className=\"cuenta-principal-contenedor\">\r\n          <div className=\"cuenta-principal\">\r\n            <h2>Cuenta Principal</h2>\r\n          </div>\r\n          <div className=\"totales\">\r\n            <h2>Total: XX€</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"filtros\">\r\n          <a href=\"#\">Día</a>\r\n          <a href=\"#\">Semana</a>\r\n          <a href=\"#\">Mes</a>\r\n        </div>\r\n        <div className=\"fecha\">\r\n          <h3>Mayo de 2024</h3>\r\n        </div>\r\n        <div className=\"detalle\">\r\n          {mostrarGastos ? <PagGastos /> : <PagIngresos />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n*/\n_s(PaginaPrincipal, \"45bRsxd41lzVAx+3+dcBuB6F02w=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = PaginaPrincipal;\nexport default PaginaPrincipal;\nvar _c;\n$RefreshReg$(_c, \"PaginaPrincipal\");","map":{"version":3,"names":["useParams","useHistory","NavbarPer","PagGastos","PagIngresos","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","URICuentasUser","URICuentaDetalle","PaginaPrincipal","_s","idUser","history","cuentas","setCuentas","selectedCuentaId","setSelectedCuentaId","selectedCuentaNombre","setSelectedCuentaNombre","mostrarGastos","setMostrarGastos","fetchCuentas","response","get","data","error","console","fetchCuentaNombre","nombre","handleCuentaChange","event","target","value","handleCrearCuenta","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onChange","map","cuenta","id","_c","$RefreshReg$"],"sources":["C:/Users/rocio/OneDrive/Desktop/CARRERA/CUARTO/SEGUNDO CUATRI/TFG/TFG_RocioGomez/frontend/src/pages/PaginaPrincipal.jsx"],"sourcesContent":["import { useParams, useHistory } from \"react-router-dom\";\r\nimport NavbarPer from \"../navbar/navbar.js\";\r\nimport PagGastos from \"../gastos/gastos.js\";\r\nimport PagIngresos from \"../ingresos/ingresos.js\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport './PaginaPrincipal.css';\r\nimport axios from 'axios';\r\n\r\nconst URICuentasUser = 'http://localhost:8000/cuentas/user/';\r\nconst URICuentaDetalle = 'http://localhost:8000/cuentas/';\r\n\r\nfunction PaginaPrincipal() {\r\n  const { idUser } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [cuentas, setCuentas] = useState([]); // Estado para almacenar las cuentas\r\n  const [selectedCuentaId, setSelectedCuentaId] = useState(null); // Estado para almacenar el ID de la cuenta seleccionada\r\n  const [selectedCuentaNombre, setSelectedCuentaNombre] = useState(''); // Estado para almacenar el nombre de la cuenta seleccionada\r\n  const [mostrarGastos, setMostrarGastos] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Cargar las cuentas al renderizar el componente\r\n    const fetchCuentas = async () => {\r\n      try {\r\n        const response = await axios.get(URICuentasUser + idUser); // Obtener las cuentas del usuario\r\n        setCuentas(response.data); // Actualizar el estado con las cuentas\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchCuentas();\r\n  }, [idUser]);\r\n\r\n  useEffect(() => {\r\n    // Obtener el nombre de la cuenta seleccionada\r\n    const fetchCuentaNombre = async () => {\r\n      if (selectedCuentaId) {\r\n        try {\r\n          const response = await axios.get(URICuentaDetalle + selectedCuentaId);\r\n          setSelectedCuentaNombre(response.data.nombre); // Actualizar el estado con el nombre de la cuenta\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    };\r\n    fetchCuentaNombre();\r\n  }, [selectedCuentaId]);\r\n\r\n  const handleCuentaChange = (event) => {\r\n    setSelectedCuentaId(event.target.value); // Actualizar el ID de la cuenta seleccionada\r\n    setSelectedCuentaNombre(''); // Limpiar el nombre de la cuenta seleccionada\r\n  };\r\n\r\n  const handleCrearCuenta = () => {\r\n    history.push(`/${idUser}/cuentas`); // Redirigir a la página de creación de cuenta\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagina-principal\">\r\n      <NavbarPer idUser={idUser} />\r\n\r\n      {cuentas.length === 0 ? (\r\n        <div className=\"sin-cuentas\">\r\n          <p>Aún no posee ninguna cuenta</p>\r\n          <button onClick={handleCrearCuenta}>Crear Cuenta</button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"cuenta-select\">\r\n            <select value={selectedCuentaId} onChange={handleCuentaChange}>\r\n              <option value=\"\">Seleccionar cuenta</option>\r\n              {cuentas.map((cuenta) => (\r\n                <option key={cuenta.id} value={cuenta.id}>\r\n                  {cuenta.nombre}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <h1>\r\n            {selectedCuentaId ? `Cuenta: ${selectedCuentaNombre}` : 'Seleccione una cuenta'}\r\n          </h1>\r\n\r\n          {selectedCuentaId && (\r\n            <div className=\"botones\">\r\n              <button className={`boton-toggle ${mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(true)}>Gastos</button>\r\n              <button className={`boton-toggle ${!mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(false)}>Ingresos</button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"detalle\">\r\n            {selectedCuentaId ? (mostrarGastos ? <PagGastos selectedCuentaId={selectedCuentaId} /> : <PagIngresos selectedCuentaId={selectedCuentaId} />) : null}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nfunction PaginaPrincipal () {\r\n    const {idUser} = useParams()\r\n\r\n    return(\r\n        <div>\r\n            <NavbarPer idUser={idUser}></NavbarPer>\r\n            <div>\r\n            <PagGastos></PagGastos>\r\n             </div>\r\n             <div>\r\n            <PagIngresos></PagIngresos>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst PaginaPrincipal = () => {\r\n  const { idUser } = useParams();\r\n  const [mostrarGastos, setMostrarGastos] = useState(true);\r\n  \r\n  return (\r\n    <div className=\"pagina-principal\">\r\n      <NavbarPer idUser={idUser} />\r\n      <div className=\"contenido\">\r\n        <div className=\"botones\">\r\n          <button className={`boton-toggle ${mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(true)}>Gastos</button>\r\n          <button className={`boton-toggle ${!mostrarGastos ? 'activo' : ''}`} onClick={() => setMostrarGastos(false)}>Ingresos</button>\r\n        </div>\r\n        <div className=\"cuenta-principal-contenedor\">\r\n          <div className=\"cuenta-principal\">\r\n            <h2>Cuenta Principal</h2>\r\n          </div>\r\n          <div className=\"totales\">\r\n            <h2>Total: XX€</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"filtros\">\r\n          <a href=\"#\">Día</a>\r\n          <a href=\"#\">Semana</a>\r\n          <a href=\"#\">Mes</a>\r\n        </div>\r\n        <div className=\"fecha\">\r\n          <h3>Mayo de 2024</h3>\r\n        </div>\r\n        <div className=\"detalle\">\r\n          {mostrarGastos ? <PagGastos /> : <PagIngresos />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n*/\r\nexport default PaginaPrincipal;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAG,qCAAqC;AAC5D,MAAMC,gBAAgB,GAAG,gCAAgC;AAEzD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAO,CAAC,GAAGjB,SAAS,CAAC,CAAC;EAC9B,MAAMkB,OAAO,GAAGjB,UAAU,CAAC,CAAC;EAE5B,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtE,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAChB,cAAc,GAAGI,MAAM,CAAC,CAAC,CAAC;QAC3DG,UAAU,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZV,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAIZ,gBAAgB,EAAE;QACpB,IAAI;UACF,MAAMO,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACf,gBAAgB,GAAGO,gBAAgB,CAAC;UACrEG,uBAAuB,CAACI,QAAQ,CAACE,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,OAAOH,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACtB;MACF;IACF,CAAC;IACDE,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACZ,gBAAgB,CAAC,CAAC;EAEtB,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;IACpCd,mBAAmB,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzCd,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9BrB,OAAO,CAACsB,IAAI,CAAE,IAAGvB,MAAO,UAAS,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACEP,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BhC,OAAA,CAACR,SAAS;MAACe,MAAM,EAAEA;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5B3B,OAAO,CAAC4B,MAAM,KAAK,CAAC,gBACnBrC,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BhC,OAAA;QAAAgC,QAAA,EAAG;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClCpC,OAAA;QAAQsC,OAAO,EAAET,iBAAkB;QAAAG,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,gBAENpC,OAAA,CAAAE,SAAA;MAAA8B,QAAA,gBACEhC,OAAA;QAAK+B,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BhC,OAAA;UAAQ4B,KAAK,EAAEjB,gBAAiB;UAAC4B,QAAQ,EAAEd,kBAAmB;UAAAO,QAAA,gBAC5DhC,OAAA;YAAQ4B,KAAK,EAAC,EAAE;YAAAI,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC3C3B,OAAO,CAAC+B,GAAG,CAAEC,MAAM,iBAClBzC,OAAA;YAAwB4B,KAAK,EAAEa,MAAM,CAACC,EAAG;YAAAV,QAAA,EACtCS,MAAM,CAACjB;UAAM,GADHiB,MAAM,CAACC,EAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENpC,OAAA;QAAAgC,QAAA,EACGrB,gBAAgB,GAAI,WAAUE,oBAAqB,EAAC,GAAG;MAAuB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,EAEJzB,gBAAgB,iBACfX,OAAA;QAAK+B,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBhC,OAAA;UAAQ+B,SAAS,EAAG,gBAAehB,aAAa,GAAG,QAAQ,GAAG,EAAG,EAAE;UAACuB,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC,IAAI,CAAE;UAAAgB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1HpC,OAAA;UAAQ+B,SAAS,EAAG,gBAAe,CAAChB,aAAa,GAAG,QAAQ,GAAG,EAAG,EAAE;UAACuB,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC,KAAK,CAAE;UAAAgB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3H,CACN,eAEDpC,OAAA;QAAK+B,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrBrB,gBAAgB,GAAII,aAAa,gBAAGf,OAAA,CAACP,SAAS;UAACkB,gBAAgB,EAAEA;QAAiB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGpC,OAAA,CAACN,WAAW;UAACiB,gBAAgB,EAAEA;QAAiB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAI;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjJ,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA9B,EAAA,CA3FSD,eAAe;EAAA,QACHf,SAAS,EACZC,UAAU;AAAA;AAAAoD,EAAA,GAFnBtC,eAAe;AAiJxB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}